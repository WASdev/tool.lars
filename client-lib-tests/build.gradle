/*******************************************************************************
* Copyright (c) 2015 IBM Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

apply plugin: 'java'
apply plugin: 'eclipse'

dependencies {
    testCompile project(':client-lib')
    testCompile project(':test-utils')
    testCompile group:'org.jmockit', name:'jmockit', version:jmockit_version
}
// With out the exclude below, the jmockit classes are initialised during the fat test runs
// for some not obvious reason. The test run then falls over with an 'AttachNotSupported'
// exception. None of the fat tests use jmockit, so it's not obvious what's happening.
// Excluding the jmockit jar seems to be the simplest solution.
configurations.fatCompile.exclude group: 'org.jmockit', module: 'jmockit'

test {
    File jmockitJar = configurations.testCompile.find({it.name.startsWith("jmockit")})
    jvmArgs "-javaagent:"+jmockitJar.getAbsolutePath()
}

rootProject.afterEvaluate {
    if (rootProject.hasProperty("java7BootClasspath")) {
        tasks.each {
            if (it instanceof JavaCompile) {
                it.options.bootClasspath = rootProject.java7BootClasspath
            }
        }
        tasks.each {
            if (it instanceof Test) {
                it.executable = rootProject.java7Executable
                it.systemProperty 'SHOULD_USE_JAVA_7', 'true'
            }
        }
    }
}
eclipse.classpath.containers=['org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7']

ext {
    // Indicate that we'd like a file hosted by the test server
    serverHostedTestFiles = [file('src/fat/testResources/testfile.txt')];
}

// Create the zip repo for FileClientLicenseTest
task createLicenseRepoZip (type:Zip) {
    destinationDir = file('build/test-working/resources')
    archiveName = 'licenseTestRepo.zip'
    from file('build/test-working/resources/licenseTestRepo')
    
    // This needs to be done after all the test resource archives have been created
    dependsOn prepareTestResources
}

prepareTestWorkingDir.dependsOn createLicenseRepoZip

// vim: set si: